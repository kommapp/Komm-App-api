part of komm.api;

// This file is generated by https://github.com/dart-ogurets/dart-openapi-maven - you should not modify it
// log generation bugs on Github, as part of the license, you must not remove these headers from the Mustache templates.

class ComplaintApi {
  final ComplaintApiDelegate apiDelegate;

  ComplaintApi(ApiClient apiClient) : apiDelegate = ComplaintApiDelegate(apiClient);

  Future<void> postComplaint({Options? options, Complaint? complaint}) async {
    final response = await apiDelegate.postComplaint(options: options, complaint: complaint,);

    final __body = response.body;
    if (response.statusCode >= 400) {
      throw ApiException(response.statusCode, __body == null ? null : await decodeBodyBytes(__body));
    }
  }
}

class ComplaintApiDelegate {
  final ApiClient apiClient;

  ComplaintApiDelegate(this.apiClient);

  Future<ApiResponse> postComplaint({Options? options, Complaint? complaint}) async {
    Object? postBody = complaint;

    // create path and map variables
    final __path = '/complaint';

    // query params
    final queryParams = <QueryParam>[];
    final headerParams = <String, String>{}..addAll(options?.headers?.cast<String, String>() ?? {});
    if (!headerParams.containsKey('Accept')) {
      // we only want to accept this format as we can parse it
      headerParams['Accept'] = 'application/json';
    }

    final authNames = <String>['oauth2'];
    final opt = options ?? Options();

    final contentTypes = ['application/json'];

    if (contentTypes.isNotEmpty && headerParams['Content-Type'] == null) {
      headerParams['Content-Type'] = contentTypes[0];
    }
    postBody = postBody == null ? null : LocalApiClient.serialize(postBody);

    headerParams.removeWhere((key, value) => value.isEmpty); // remove empty headers
    opt.headers = headerParams;
    opt.method = 'POST';

    return await apiClient.invokeAPI(__path, queryParams, postBody, authNames, opt);
  }

  Future<void> postComplaint_decode(Stream<List<int>> body) async {}
}

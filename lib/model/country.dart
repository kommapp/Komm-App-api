part of komm.api;

// This file is generated by https://github.com/dart-ogurets/dart-openapi-maven - you should not modify it
// log generation bugs on Github, as part of the license, you must not remove these headers from the Mustache templates.

// Country
class Country {
  /* Identifier of the object */
  String? id;

  String? name;

  /* ISO language code */
  String? isoCode;

  int? callPrefix;

  Country({
    this.id,
    this.name,
    this.isoCode,
    this.callPrefix,
  });

  @override
  String toString() {
    return 'Country[id=$id, isoCode=$isoCode, callPrefix=$callPrefix, ]';
  }

  fromJson(Map<String, dynamic>? json) {
    if (json == null) return;

    id = (json[r'id'] == null) ? null : (json[r'id'] as String?);

    name = (json[r'name'] == null) ? null : (json[r'name'] as String?);

    isoCode = (json[r'isoCode'] == null) ? null : (json[r'isoCode'] as String?);

    callPrefix = (json[r'call_prefix'] == null) ? null : (json[r'call_prefix'] as int?);
  }

  Country.fromJson(Map<String, dynamic>? json) {
    fromJson(json); // allows child classes to call
  }

  Map<String, dynamic> toJson() {
    final json = <String, dynamic>{};
    if (id != null) {
      json[r'id'] = id;
    }
    if (name != null) {
      json[r'name'] = name;
    }
    if (isoCode != null) {
      json[r'isoCode'] = isoCode;
    }
    if (callPrefix != null) {
      json[r'call_prefix'] = callPrefix;
    }
    return json;
  }

  static List<Country> listFromJson(List<dynamic>? json) {
    return json == null ? <Country>[] : json.map((value) => Country.fromJson(value)).toList();
  }

  static Map<String, Country> mapFromJson(Map<String, dynamic>? json) {
    final map = <String, Country>{};
    if (json != null && json.isNotEmpty) {
      json.forEach((String key, dynamic value) => map[key] = Country.fromJson(value));
    }
    return map;
  }

  @override
  bool operator ==(Object __other) {
    if (identical(this, __other)) {
      return true;
    }

    if (__other is Country && runtimeType == __other.runtimeType) {
      return id == __other.id &&
        name == __other.name &&
        isoCode == __other.isoCode &&
        callPrefix == __other.callPrefix;
    }

    return false;
  }

  @override
  int get hashCode {
    var hashCode = runtimeType.hashCode;

    if (id != null) {
      hashCode = hashCode * 31 + id.hashCode;
    }

    if (name != null) {
      hashCode = hashCode * 31  + id.hashCode;
    }

    if (isoCode != null) {
      hashCode = hashCode * 31 + isoCode.hashCode;
    }

    if (callPrefix != null) {
      hashCode = hashCode * 31 + callPrefix.hashCode;
    }

    return hashCode;
  }

  Country copyWith({
    String? id,
    String? name,
    String? isoCode,
    int? callPrefix,
  }) {
    id ??= this.id;
    name ??= this.name;
    isoCode ??= this.isoCode;
    callPrefix ??= this.callPrefix;

    final _copy_id = id;
    final _copy_name = name;
    final _copy_isoCode = isoCode;
    final _copy_callPrefix = callPrefix;

    return Country(
      id: _copy_id,
      name: _copy_name,
      isoCode: _copy_isoCode,
      callPrefix: _copy_callPrefix,
    );
  }
}

part of komm.api;

// This file is generated by https://github.com/dart-ogurets/dart-openapi-maven - you should not modify it
// log generation bugs on Github, as part of the license, you must not remove these headers from the Mustache templates.

// ChatMessage
class ChatMessage {
  String? id;

  String? profileId;

  String? chatId;

  String? message;

  String? date;

  bool? read;

  ChatMessage({
    this.id,
    this.profileId,
    this.chatId,
    this.message,
    this.date,
    this.read
  });

  @override
  String toString() {
    return 'ChatMessage[id=$id, profileId=$profileId chatId=$chatId, message=$message, date=$date, read=$read]';
  }

  fromJson(Map<String, dynamic>? json) {
    if (json == null) return;

    id        = (json[r'id']        == null) ? null: (json[r'id'] as String?);
    profileId = (json[r'profileId'] == null) ? null: (json[r'profileId'] as String?);
    chatId    = (json[r'chatId']    == null) ? null: (json[r'chatId'] as String?);
    message   = (json[r'message']   == null) ? null: (json[r'message'] as String?);
    date      = (json[r'date']      == null) ? null: (json[r'date'] as String?);
    read      = (json[r'read']      == null) ? null: (json[r'read'] as bool?);
  }

  ChatMessage.fromJson(Map<String, dynamic>? json) {
    fromJson(json); // allows child classes to call
  }

  Map<String, dynamic> toJson() {
    final json = <String, dynamic>{};
    if (id != null) {
      json[r'id'] = id;
    }
    if (profileId != null) {
      json[r'profileId'] = profileId;
    }
    if (chatId != null) {
      json[r'chatId'] = chatId;
    }
    if (message != null) {
      json[r'message'] = message;
    }
    if (date != null) {
      json[r'date'] = date;
    }
    if (read != null) {
      json[r'read'] = read;
    }
    return json;
  }

  static List<ChatMessage> listFromJson(List<dynamic>? json) {
    return json == null
      ? <ChatMessage>[]
      : json.map((value) => ChatMessage.fromJson(value)).toList();
  }

  static Map<String, ChatMessage> mapFromJson(Map<String, dynamic>? json) {
    final map = <String, ChatMessage>{};
    if (json != null && json.isNotEmpty) {
      json.forEach((String key, dynamic value) =>
          map[key] = ChatMessage.fromJson(value));
    }
    return map;
  }

  @override
  bool operator ==(Object? __other) {
    if (identical(this, __other)) {
      return true;
    }

    if (__other is ChatMessage && runtimeType == __other.runtimeType) {
      return id == __other.id &&
        profileId == __other.profileId &&
        chatId == __other.chatId &&
        message == __other.message &&
        date == __other.date &&
        read == __other.read;
    }

    return false;
  }

  @override
  int get hashCode {
    var hashCode = runtimeType.hashCode;

    if (id != null) {
      hashCode = hashCode * 31 + id.hashCode;
    }

    if (profileId != null) {
      hashCode = hashCode * 31 + profileId.hashCode;
    }

    if (chatId != null) {
      hashCode = hashCode * 31 + chatId.hashCode;
    }

    if (message != null) {
      hashCode = hashCode * 31 + message.hashCode;
    }

    if (date != null) {
      hashCode = hashCode * 31 + date.hashCode;
    }

    if (read != null) {
      hashCode = hashCode * 31 + read.hashCode;
    }

    return hashCode;
  }

  ChatMessage copyWith({
    String? id,
    String? profileId,
    String? chatId,
    String? message,
    String? date,
    bool?   read
  }) {
    id ??= this.id;
    profileId ??= this.profileId;
    chatId ??= this.chatId;
    message ??= this.message;
    date ??= this.date;
    read ??= this.read;

    final _copy_id = id;
    final _copy_profileId = profileId;
    final _copy_chatId = chatId;
    final _copy_message = message;
    final _copy_date = date;
    final _copy_read = read;

    return ChatMessage(
      id       : _copy_id,
      profileId: _copy_profileId,
      chatId   : _copy_chatId,
      message  : _copy_message,
      date     : _copy_date,
      read     : _copy_read
    );
  }
}

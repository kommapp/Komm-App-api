part of komm.api;

// This file is generated by https://github.com/dart-ogurets/dart-openapi-maven - you should not modify it
// log generation bugs on Github, as part of the license, you must not remove these headers from the Mustache templates.

// ProfileEvent
class ProfileEvent {
  String? id;
  String? title;
  String? picture;
  String? descriptionShort;
  String? dateInit;
  num? duration;
  int? paxes;
  int? externalPaxes;
  int? status;
  num? price;
  int? participantStatus;
  int? validateRequest;
  EventCreator? profile;
  Hobby? hobby;
  String? chatId;
  bool? orgBlocked;
  String? orgProfileType;
  int? totalConfirm;
  int? totalPending;
  int? totalChecked;
  String? type;

  ProfileEvent({
    this.id,
    this.title,
    this.picture,
    this.descriptionShort,
    this.dateInit,
    this.duration,
    this.paxes,
    this.externalPaxes,
    this.status,
    this.price,
    this.validateRequest,
    this.participantStatus,
    this.profile,
    this.hobby,
    this.chatId,
    this.orgBlocked,
    this.orgProfileType,
    this.totalConfirm,
    this.totalPending,
    this.totalChecked,
    this.type,
  });

  bool get isNormal => type == EventType.normal;
  bool get isVip => type == EventType.vip;
  bool get isPro => type == EventType.pro;

  int get totalParticipants => (totalConfirm ?? 0) + (externalPaxes ?? 0);

  @override
  String toString() {
    return 'ProfileEvent[id=$id, title=$title, picture=$picture, description_short=$descriptionShort, dateInit=$dateInit, duration=$duration, paxes=$paxes, externalPaxes=$externalPaxes, status=$status, price=$price, validateRequest=$validateRequest, participantStatus=$participantStatus, profile=$profile, hobby=$hobby, chatId=$chatId, orgBlocked=$orgBlocked, orgProfileType=$orgProfileType, totalConfirm=$totalConfirm, totalPending=$totalPending, totalChecked=$totalChecked, pro=$type ]';
  }

  fromJson(Map<String, dynamic>? json) {
    if (json == null) return;

    try {
      id = (json[r'id'] == null) ? null : (json[r'id'] as String?);
      title = (json[r'title'] == null) ? null : (json[r'title'] as String?);
      picture = (json[r'picture'] == null) ? null : (json[r'picture'] as String?);
      descriptionShort = (json[r'description_short'] == null) ? null : (json[r'description_short'] as String?);
      dateInit = (json[r'date_init'] == null) ? null : (json[r'date_init'] as String?);
      duration = (json[r'duration'] == null) ? null : (json[r'duration'] as num?);
      paxes = (json[r'paxes'] == null) ? null : (json[r'paxes'] as int?);
      externalPaxes = (json[r'external_paxes'] == null) ? null : (json[r'external_paxes'] as int?);
      status = (json[r'status'] == null) ? null : (json[r'status'] as int?);
      price = (json[r'price'] == null) ? null : (json[r'price'] as num?);
      validateRequest = (json[r'validate_request'] == null) ? null : (json[r'validate_request'] as int?);
      participantStatus = (json[r'participant_status'] == null) ? null : (json[r'participant_status'] as int?);
      profile = (json[r'profile'] == null) ? null : EventCreator.fromJson(json[r'profile']);
      hobby = (json[r'hobby'] == null) ? null : Hobby.fromJson(json[r'hobby']);
      chatId = (json[r'chatId'] == null) ? null : (json[r'chatId'] as String?);
      orgBlocked = (json[r'orgBlocked'] == null) ? null : (json[r'orgBlocked'] as bool?);
      orgProfileType = (json[r'orgProfileType'] == null) ? null : (json[r'orgProfileType'] as String?);
      totalConfirm = (json[r'totalConfirm'] == null) ? 0 : (json[r'totalConfirm'] as int?);
      totalPending = (json[r'totalPending'] == null) ? 0 : (json[r'totalPending'] as int?);
      totalChecked = (json[r'totalChecked'] == null) ? 0 : (json[r'totalChecked'] as int?);
      type = (json[r'type'] == null) ? null : (json[r'type'] as String?);
    } catch (e) {
      print(e);
    }
  }

  ProfileEvent.fromJson(Map<String, dynamic>? json) {
    fromJson(json); // allows child classes to call
  }

  Map<String, dynamic> toJson() {
    final json = <String, dynamic>{};
    if (id != null) {
      json[r'id'] = id;
    }
    if (title != null) {
      json[r'title'] = title;
    }
    if (picture != null) {
      json[r'picture'] = picture;
    }
    if (descriptionShort != null) {
      json[r'description_short'] = descriptionShort;
    }
    if (dateInit != null) {
      json[r'date_init'] = dateInit;
    }
    if (duration != null) {
      json[r'duration'] = duration;
    }
    if (paxes != null) {
      json[r'paxes'] = paxes;
    }
    if (externalPaxes != null) {
      json[r'external_paxes'] = externalPaxes;
    }
    if (status != null) {
      json[r'status'] = status;
    }
    if (price != null) {
      json[r'price'] = price;
    }
    if (participantStatus != null) {
      json[r'participant_status'] = participantStatus;
    }
    if (validateRequest != null) {
      json[r'validate_request'] = validateRequest;
    }
    if (profile != null) {
      json[r'profile'] = profile?.toJson();
    }
    if (hobby != null) {
      json[r'hobby'] = hobby?.toJson();
    }
    if (chatId != null) {
      json[r'chatId'] = chatId;
    }
    if (orgBlocked != null) {
      json[r'orgBlocked'] = orgBlocked;
    }
    if (orgProfileType != null) {
      json[r'orgProfileType'] = orgProfileType;
    }
    if (totalConfirm != null) {
      json[r'totalConfirm'] = totalConfirm;
    }
    if (totalPending != null) {
      json[r'totalPending'] = totalPending;
    }
    if (totalChecked != null) {
      json[r'totalChecked'] = totalChecked;
    }
    if (type != null) {
      json[r'type'] = type;
    }

    return json;
  }

  static List<ProfileEvent> listFromJson(List<dynamic>? json) {
    return json == null ? <ProfileEvent>[] : json.map((value) => ProfileEvent.fromJson(value)).toList();
  }

  static Map<String, ProfileEvent> mapFromJson(Map<String, dynamic>? json) {
    final map = <String, ProfileEvent>{};
    if (json != null && json.isNotEmpty) {
      json.forEach((String key, dynamic value) => map[key] = ProfileEvent.fromJson(value));
    }
    return map;
  }

  @override
  bool operator ==(Object? __other) {
    if (identical(this, __other)) {
      return true;
    }

    if (__other is ProfileEvent && runtimeType == __other.runtimeType) {
      return id == __other.id &&
          title == __other.title &&
          picture == __other.picture &&
          descriptionShort == __other.descriptionShort &&
          dateInit == __other.dateInit &&
          duration == __other.duration &&
          paxes == __other.paxes &&
          externalPaxes == __other.externalPaxes &&
          status == __other.status &&
          price == __other.price &&
          validateRequest == __other.validateRequest &&
          participantStatus == __other.participantStatus &&
          profile == __other.profile && // __other
          hobby == __other.hobby && // __other
          chatId == __other.chatId &&
          orgBlocked == __other.orgBlocked &&
          orgProfileType == __other.orgProfileType &&
          totalConfirm == __other.totalConfirm &&
          totalPending == __other.totalPending &&
          totalChecked == __other.totalChecked &&
          type == __other.type; 
    }

    return false;
  }

  @override
  int get hashCode {
    var hashCode = runtimeType.hashCode;

    if (id != null) {
      hashCode = hashCode * 31 + id.hashCode;
    }

    if (title != null) {
      hashCode = hashCode * 31 + title.hashCode;
    }

    if (picture != null) {
      hashCode = hashCode * 31 + picture.hashCode;
    }

    if (descriptionShort != null) {
      hashCode = hashCode * 31 + descriptionShort.hashCode;
    }

    if (dateInit != null) {
      hashCode = hashCode * 31 + dateInit.hashCode;
    }

    if (duration != null) {
      hashCode = hashCode * 31 + duration.hashCode;
    }

    if (paxes != null) {
      hashCode = hashCode * 31 + paxes.hashCode;
    }

    if (externalPaxes != null) {
      hashCode = hashCode * 31 + externalPaxes.hashCode;
    }

    if (status != null) {
      hashCode = hashCode * 31 + status.hashCode;
    }

    if (price != null) {
      hashCode = hashCode * 31 + price.hashCode;
    }

    if (participantStatus != null) {
      hashCode = hashCode * 31 + participantStatus.hashCode;
    }

    if (validateRequest != null) {
      hashCode = hashCode * 31 + validateRequest.hashCode;
    }

    if (profile != null) {
      hashCode = hashCode * 31 + profile.hashCode;
    }

    if (hobby != null) {
      hashCode = hashCode * 31 + hobby.hashCode;
    }

    if (chatId != null) {
      hashCode = hashCode * 31 + chatId.hashCode;
    }

    if (orgBlocked != null) {
      hashCode = hashCode * 31 + orgBlocked.hashCode;
    }

    if (orgProfileType != null) {
      hashCode = hashCode * 31 + orgProfileType.hashCode;
    }

    if (totalConfirm != null) {
      hashCode = hashCode * 31 + totalConfirm.hashCode;
    }

    if (totalPending != null) {
      hashCode = hashCode * 31 + totalPending.hashCode;
    }

    if (totalChecked != null) {
      hashCode = hashCode * 31 + totalChecked.hashCode;
    }

    if (type != null) {
      hashCode = hashCode * 31 + type.hashCode;
    }

    return hashCode;
  }

  ProfileEvent copyWith({
    String? id,
    String? title,
    String? picture,
    String? descriptionShort,
    String? dateInit,
    num? duration,
    int? paxes,
    int? externalPaxes,
    int? status,
    num? price,
    int? validateRequest,
    int? participantStatus,
    EventCreator? profile,
    Hobby? hobby,
    String? chatId,
    bool? orgBlocked,
    String? orgProfileType,
    int? totalConfirm,
    int? totalPending,
    int? totalChecked,
    String? type,
    bool? valoration,
  }) {
    id ??= this.id;
    title ??= this.title;
    picture ??= this.picture;
    descriptionShort ??= this.descriptionShort;
    dateInit ??= this.dateInit;
    duration ??= this.duration;
    paxes ??= this.paxes;
    externalPaxes ??= this.externalPaxes;
    status ??= this.status;
    price ??= this.price;
    validateRequest ??= this.validateRequest;
    participantStatus ??= this.participantStatus;
    profile ??= this.profile;
    hobby ??= this.hobby;
    chatId ??= this.chatId;
    orgBlocked ??= this.orgBlocked;
    orgProfileType ??= this.orgProfileType;
    totalConfirm ??= this.totalConfirm;
    totalPending ??= this.totalPending;
    totalChecked ??= this.totalChecked;
    type ??= this.type;

    final _copy_id = id;
    final _copy_title = title;
    final _copy_picture = picture;
    final _copy_descriptionShort = descriptionShort;
    final _copy_dateInit = dateInit;
    final _copy_duration = duration;
    final _copy_paxes = paxes;
    final _copy_externalPaxes = externalPaxes;
    final _copy_status = status;
    final _copy_price = price;
    final _copy_validateRequest = validateRequest;
    final _copy_participantStatus = participantStatus;
    final _copy_profile = profile?.copyWith();
    final _copy_hobby = hobby?.copyWith();
    final _copy_chatId = chatId;
    final _copy_orgBlocked = orgBlocked;
    final _copy_orgProfileType = orgProfileType;
    final _copy_totalConfirm = totalConfirm;
    final _copy_totalPending = totalPending;
    final _copy_totalChecked = totalChecked;
    final _copy_pro = type;

    return ProfileEvent(
      id: _copy_id,
      title: _copy_title,
      picture: _copy_picture,
      descriptionShort: _copy_descriptionShort,
      dateInit: _copy_dateInit,
      duration: _copy_duration,
      paxes: _copy_paxes,
      externalPaxes: _copy_externalPaxes,
      status: _copy_status,
      price: _copy_price,
      validateRequest: _copy_validateRequest,
      participantStatus: _copy_participantStatus,
      profile: _copy_profile,
      hobby: _copy_hobby,
      chatId: _copy_chatId,
      orgBlocked: _copy_orgBlocked,
      orgProfileType: _copy_orgProfileType,
      totalConfirm: _copy_totalConfirm,
      totalPending: _copy_totalPending,
      totalChecked: _copy_totalChecked,
      type: _copy_pro,
    );
  }
}

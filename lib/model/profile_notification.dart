part of komm.api;

// This file is generated by https://github.com/dart-ogurets/dart-openapi-maven - you should not modify it
// log generation bugs on Github, as part of the license, you must not remove these headers from the Mustache templates.

// ProfileNotification
class ProfileNotification {
  String? profileId;

  ProfileNotificationNotifications? notifications;

  ProfileNotification({
    this.profileId,
    this.notifications,
  });

  @override
  String toString() {
    return 'ProfileNotification[profileId=$profileId, notifications=$notifications, ]';
  }

  fromJson(Map<String, dynamic>? json) {
    if (json == null) return;

    profileId =
        (json[r'profileId'] == null) ? null : (json[r'profileId'] as String?);

    notifications = (json[r'notifications'] == null)
        ? null
        : ProfileNotificationNotifications.fromJson(json[r'notifications']);
  }

  ProfileNotification.fromJson(Map<String, dynamic>? json) {
    fromJson(json); // allows child classes to call
  }

  Map<String, dynamic> toJson() {
    final json = <String, dynamic>{};
    if (profileId != null) {
      json[r'profileId'] = profileId;
    }
    if (notifications != null) {
      json[r'notifications'] = notifications?.toJson();
    }
    return json;
  }

  static List<ProfileNotification> listFromJson(List<dynamic>? json) {
    return json == null
        ? <ProfileNotification>[]
        : json.map((value) => ProfileNotification.fromJson(value)).toList();
  }

  static Map<String, ProfileNotification> mapFromJson(
      Map<String, dynamic>? json) {
    final map = <String, ProfileNotification>{};
    if (json != null && json.isNotEmpty) {
      json.forEach((String key, dynamic value) =>
          map[key] = ProfileNotification.fromJson(value));
    }
    return map;
  }

  @override
  bool operator ==(Object? __other) {
    if (identical(this, __other)) {
      return true;
    }

    if (__other is ProfileNotification && runtimeType == __other.runtimeType) {
      return profileId == __other.profileId &&
          notifications == __other.notifications;
    }

    return false;
  }

  @override
  int get hashCode {
    var hashCode = runtimeType.hashCode;

    if (profileId != null) {
      hashCode = hashCode * 31 + profileId.hashCode;
    }

    if (notifications != null) {
      hashCode = hashCode * 31 + notifications.hashCode;
    }

    return hashCode;
  }

  ProfileNotification copyWith({
    String? profileId,
    ProfileNotificationNotifications? notifications,
  }) {
    profileId ??= this.profileId;
    notifications ??= this.notifications;

    final _copy_profileId = profileId;
    final _copy_notifications = notifications?.copyWith();

    return ProfileNotification(
      profileId: _copy_profileId,
      notifications: _copy_notifications,
    );
  }
}

part of komm.api;

// This file is generated by https://github.com/dart-ogurets/dart-openapi-maven - you should not modify it
// log generation bugs on Github, as part of the license, you must not remove these headers from the Mustache templates.

// UnblockUserRequest
class UnblockUserRequest {
  String? blockProfile;

  UnblockUserRequest({
    this.blockProfile,
  });

  @override
  String toString() {
    return 'UnblockUserRequest[blockProfile=$blockProfile, ]';
  }

  fromJson(Map<String, dynamic>? json) {
    if (json == null) return;

    blockProfile = (json[r'blockProfile'] == null) ? null : (json[r'blockProfile'] as String?);
  }

  UnblockUserRequest.fromJson(Map<String, dynamic>? json) {
    fromJson(json); // allows child classes to call
  }

  Map<String, dynamic> toJson() {
    final json = <String, dynamic>{};
    if (blockProfile != null) {
      json[r'blockProfile'] = blockProfile;
    }
    return json;
  }

  static List<UnblockUserRequest> listFromJson(List<dynamic>? json) {
    return json == null ? <UnblockUserRequest>[] : json.map((value) => UnblockUserRequest.fromJson(value)).toList();
  }

  static Map<String, UnblockUserRequest> mapFromJson(Map<String, dynamic>? json) {
    final map = <String, UnblockUserRequest>{};
    if (json != null && json.isNotEmpty) {
      json.forEach((String key, dynamic value) => map[key] = UnblockUserRequest.fromJson(value));
    }
    return map;
  }

  @override
  bool operator ==(Object? __other) {
    if (identical(this, __other)) {
      return true;
    }

    if (__other is UnblockUserRequest && runtimeType == __other.runtimeType) {
      return blockProfile == __other.blockProfile;
    }

    return false;
  }

  @override
  int get hashCode {
    var hashCode = runtimeType.hashCode;

    if (blockProfile != null) {
      hashCode = hashCode * 31 + blockProfile.hashCode;
    }

    return hashCode;
  }

  UnblockUserRequest copyWith({
    String? blockProfile,
  }) {
    blockProfile ??= this.blockProfile;

    final _copy_blockProfile = blockProfile;

    return UnblockUserRequest(
      blockProfile: _copy_blockProfile,
    );
  }
}

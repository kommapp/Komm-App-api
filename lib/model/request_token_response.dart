part of komm.api;

// This file is generated by https://github.com/dart-ogurets/dart-openapi-maven - you should not modify it
// log generation bugs on Github, as part of the license, you must not remove these headers from the Mustache templates.

// RequestTokenResponse
class RequestTokenResponse {
  String? tokenType;

  int? expiresIn;

  String? accessToken;

  String? refreshToken;

  RequestTokenResponse({
    this.tokenType,
    this.expiresIn,
    this.accessToken,
    this.refreshToken,
  });

  @override
  String toString() {
    return 'RequestTokenResponse[tokenType=$tokenType, expiresIn=$expiresIn, accessToken=$accessToken, refreshToken=$refreshToken, ]';
  }

  fromJson(Map<String, dynamic>? json) {
    if (json == null) return;

    tokenType =
        (json[r'token_type'] == null) ? null : (json[r'token_type'] as String?);

    expiresIn =
        (json[r'expires_in'] == null) ? null : (json[r'expires_in'] as int?);

    accessToken = (json[r'access_token'] == null)
        ? null
        : (json[r'access_token'] as String?);

    refreshToken = (json[r'refresh_token'] == null)
        ? null
        : (json[r'refresh_token'] as String?);
  }

  RequestTokenResponse.fromJson(Map<String, dynamic>? json) {
    fromJson(json); // allows child classes to call
  }

  Map<String, dynamic> toJson() {
    final json = <String, dynamic>{};
    if (tokenType != null) {
      json[r'token_type'] = tokenType;
    }
    if (expiresIn != null) {
      json[r'expires_in'] = expiresIn;
    }
    if (accessToken != null) {
      json[r'access_token'] = accessToken;
    }
    if (refreshToken != null) {
      json[r'refresh_token'] = refreshToken;
    }
    return json;
  }

  static List<RequestTokenResponse> listFromJson(List<dynamic>? json) {
    return json == null
        ? <RequestTokenResponse>[]
        : json.map((value) => RequestTokenResponse.fromJson(value)).toList();
  }

  static Map<String, RequestTokenResponse> mapFromJson(
      Map<String, dynamic>? json) {
    final map = <String, RequestTokenResponse>{};
    if (json != null && json.isNotEmpty) {
      json.forEach((String key, dynamic value) =>
          map[key] = RequestTokenResponse.fromJson(value));
    }
    return map;
  }

  @override
  bool operator ==(Object? __other) {
    if (identical(this, __other)) {
      return true;
    }

    if (__other is RequestTokenResponse && runtimeType == __other.runtimeType) {
      return tokenType == __other.tokenType &&
          expiresIn == __other.expiresIn &&
          accessToken == __other.accessToken &&
          refreshToken == __other.refreshToken;
    }

    return false;
  }

  @override
  int get hashCode {
    var hashCode = runtimeType.hashCode;

    if (tokenType != null) {
      hashCode = hashCode * 31 + tokenType.hashCode;
    }

    if (expiresIn != null) {
      hashCode = hashCode * 31 + expiresIn.hashCode;
    }

    if (accessToken != null) {
      hashCode = hashCode * 31 + accessToken.hashCode;
    }

    if (refreshToken != null) {
      hashCode = hashCode * 31 + refreshToken.hashCode;
    }

    return hashCode;
  }

  RequestTokenResponse copyWith({
    String? tokenType,
    int? expiresIn,
    String? accessToken,
    String? refreshToken,
  }) {
    tokenType ??= this.tokenType;
    expiresIn ??= this.expiresIn;
    accessToken ??= this.accessToken;
    refreshToken ??= this.refreshToken;

    final _copy_tokenType = tokenType;
    final _copy_expiresIn = expiresIn;
    final _copy_accessToken = accessToken;
    final _copy_refreshToken = refreshToken;

    return RequestTokenResponse(
      tokenType: _copy_tokenType,
      expiresIn: _copy_expiresIn,
      accessToken: _copy_accessToken,
      refreshToken: _copy_refreshToken,
    );
  }
}

part of komm.api;

// This file is generated by https://github.com/dart-ogurets/dart-openapi-maven - you should not modify it
// log generation bugs on Github, as part of the license, you must not remove these headers from the Mustache templates.

// ProfilePreferences
class ProfilePreferences {
  double? heightMin;
  double? heightMax;
  int?    ageMin;
  int?    ageMax;
  int?    distance;

  String? location;   // used on CreateProfileRequest / UpdateProfileRequest
  String? poi;        // user on GetProfilePreferencesById

  List<String>? complexions = [];
  List<String>? educations = [];
  List<String>? genders = [];
  List<String>? nationality = [];

  ProfilePreferences({
    this.heightMin,
    this.heightMax,
    this.ageMin,
    this.ageMax,
    this.distance,
    this.location,
    this.poi,
    this.complexions,
    this.educations,
    this.genders,
    this.nationality,
  });

  @override
  String toString() {
    return 'ProfilePreferences[heightMin=$heightMin, heightMax=$heightMax, ageMin=$ageMin, ageMax=$ageMax, distance=$distance, location=$location, poi=$poi, complexions=$complexions, educations=$educations, genders=$genders, nationality=$nationality, ]';
  }

  fromJson(Map<String, dynamic>? json) {
    if (json == null) return;

    heightMin = (json[r'height_min'] == null) ? null: (json[r'height_min'] as num?)?.toDouble();
    heightMax = (json[r'height_max'] == null) ? null: (json[r'height_max'] as num?)?.toDouble();
    ageMin    = (json[r'age_min']    == null) ? null: (json[r'age_min'] as int?);
    ageMax    = (json[r'age_max']    == null) ? null: (json[r'age_max'] as int?);
    distance  = (json[r'distance']   == null) ? null: (json[r'distance'] as int?);
    location  = (json[r'location']   == null) ? null: (json[r'location'] as String?);
    poi       = (json[r'poi']        == null) ? null: (json[r'poi'] as String?);

    {
      final _jsonData = json[r'complexions'];
      complexions = (_jsonData == null)
        ? []
        : ((dynamic data) {
            return (data as List<dynamic>?)?.cast<String>() ?? <String>[];
          }(_jsonData));
    } // _jsonFieldName

    {
      final _jsonData = json[r'educations'];
      educations = (_jsonData == null)
          ? []
          : ((dynamic data) {
              return (data as List<dynamic>?)?.cast<String>() ?? <String>[];
            }(_jsonData));
    } // _jsonFieldName

    {
      final _jsonData = json[r'genders'];
      genders = (_jsonData == null)
          ? []
          : ((dynamic data) {
              return (data as List<dynamic>?)?.cast<String>() ?? <String>[];
            }(_jsonData));
    } // _jsonFieldName

    {
      final _jsonData = json[r'nationality'];
      nationality = (_jsonData == null)
          ? []
          : ((dynamic data) {
              return (data as List<dynamic>?)?.cast<String>() ?? <String>[];
            }(_jsonData));
    } // _jsonFieldName
  }

  ProfilePreferences.fromJson(Map<String, dynamic>? json) {
    fromJson(json); // allows child classes to call
  }

  Map<String, dynamic> toJson() {
    final json = <String, dynamic>{};
    if (heightMin != null) {
      json[r'height_min'] = heightMin;
    }
    if (heightMax != null) {
      json[r'height_max'] = heightMax;
    }
    if (ageMin != null) {
      json[r'age_min'] = ageMin;
    }
    if (ageMax != null) {
      json[r'age_max'] = ageMax;
    }
    if (distance != null) {
      json[r'distance'] = distance;
    }
    if (location != null) {
      json[r'location'] = location;
    }
    if (poi != null) {
      json[r'poi'] = poi;
    }
    if (complexions != null) {
      json[r'complexions'] = complexions?.map((v) => LocalApiClient.serialize(v)).toList();
    }
    if (educations != null) {
      json[r'educations'] = educations?.map((v) => LocalApiClient.serialize(v)).toList();
    }
    if (genders != null) {
      json[r'genders'] = genders?.map((v) => LocalApiClient.serialize(v)).toList();
    }
    if (nationality != null) {
      json[r'nationality'] = nationality?.map((v) => LocalApiClient.serialize(v)).toList();
    }
    return json;
  }

  static List<ProfilePreferences> listFromJson(List<dynamic>? json) {
    return json == null ? <ProfilePreferences>[] : json.map((value) => ProfilePreferences.fromJson(value)).toList();
  }

  static Map<String, ProfilePreferences> mapFromJson(Map<String, dynamic>? json) {
    final map = <String, ProfilePreferences>{};
    if (json != null && json.isNotEmpty) {
      json.forEach((String key, dynamic value) => map[key] = ProfilePreferences.fromJson(value));
    }
    return map;
  }

  @override
  bool operator ==(Object? __other) {
    if (identical(this, __other)) {
      return true;
    }

    if (__other is ProfilePreferences && runtimeType == __other.runtimeType) {
      return heightMin == __other.heightMin &&
          heightMax == __other.heightMax &&
          ageMin == __other.ageMin &&
          ageMax == __other.ageMax &&
          distance == __other.distance &&
          location == __other.location &&
          poi == __other.poi &&
          const ListEquality().equals(complexions, __other.complexions) &&
          const ListEquality().equals(educations, __other.educations) &&
          const ListEquality().equals(genders, __other.genders) &&
          const ListEquality().equals(nationality, __other.nationality);
    }

    return false;
  }

  @override
  int get hashCode {
    var hashCode = runtimeType.hashCode;

    if (heightMin != null) {
      hashCode = hashCode * 31 + heightMin.hashCode;
    }

    if (heightMax != null) {
      hashCode = hashCode * 31 + heightMax.hashCode;
    }

    if (ageMin != null) {
      hashCode = hashCode * 31 + ageMin.hashCode;
    }

    if (ageMax != null) {
      hashCode = hashCode * 31 + ageMax.hashCode;
    }

    if (distance != null) {
      hashCode = hashCode * 31 + distance.hashCode;
    }

    if (poi != null) {
      hashCode = hashCode * 31 + poi.hashCode;
    }

    if (location != null) {
      hashCode = hashCode * 31 + location.hashCode;
    }

    if (complexions != null) {
      hashCode = hashCode * 31 + const ListEquality().hash(complexions);
    }

    if (educations != null) {
      hashCode = hashCode * 31 + const ListEquality().hash(educations);
    }

    if (genders != null) {
      hashCode = hashCode * 31 + const ListEquality().hash(genders);
    }

    if (nationality != null) {
      hashCode = hashCode * 31 + const ListEquality().hash(nationality);
    }

    return hashCode;
  }

  ProfilePreferences copyWith({
    double? heightMin,
    double? heightMax,
    int? ageMin,
    int? ageMax,
    int? distance,
    String? location,
    String? poi,
    List<String>? complexions,
    List<String>? educations,
    List<String>? genders,
    List<String>? nationality,
  }) {
    heightMin ??= this.heightMin;
    heightMax ??= this.heightMax;
    ageMin ??= this.ageMin;
    ageMax ??= this.ageMax;
    distance ??= this.distance;
    location ??= this.location;
    poi ??= this.poi;
    complexions ??= this.complexions;
    educations ??= this.educations;
    genders ??= this.genders;
    nationality ??= this.nationality;

    final _copy_heightMin = heightMin;
    final _copy_heightMax = heightMax;
    final _copy_ageMin = ageMin;
    final _copy_ageMax = ageMax;
    final _copy_distance = distance;
    final _copy_location = location;
    final _copy_poi = poi;
    final _copy_complexions = (complexions == null)
        ? [] as List<String>?
        : ((List<String>? data) {
            return data?.toList();
          }(complexions));

    final _copy_educations = (educations == null)
        ? [] as List<String>?
        : ((List<String>? data) {
            return data?.toList();
          }(educations));

    final _copy_genders = (genders == null)
        ? [] as List<String>?
        : ((List<String>? data) {
            return data?.toList();
          }(genders));

    final _copy_nationality = (nationality == null)
        ? [] as List<String>?
        : ((List<String>? data) {
            return data?.toList();
          }(nationality));

    return ProfilePreferences(
      heightMin  : _copy_heightMin,
      heightMax  : _copy_heightMax,
      ageMin     : _copy_ageMin,
      ageMax     : _copy_ageMax,
      distance   : _copy_distance,
      location   : _copy_location,
      poi        : _copy_poi,
      complexions: _copy_complexions,
      educations : _copy_educations,
      genders    : _copy_genders,
      nationality: _copy_nationality,
    );
  }
}

part of komm.api;

// This file is generated by https://github.com/dart-ogurets/dart-openapi-maven - you should not modify it
// log generation bugs on Github, as part of the license, you must not remove these headers from the Mustache templates.

// Complaint
class Complaint {
  String? id;

  String? type;

  String? profile;

  String? details;

  Complaint({
    this.id,
    this.type,
    this.profile,
    this.details,
  });

  @override
  String toString() {
    return 'Complaint[id=$id, type=$type, profile=$profile, details=$details, ]';
  }

  fromJson(Map<String, dynamic>? json) {
    if (json == null) return;

    id = (json[r'id'] == null) ? null : (json[r'id'] as String?);

    type = (json[r'type'] == null) ? null : (json[r'type'] as String?);

    profile = (json[r'profile'] == null) ? null : (json[r'profile'] as String?);

    details = (json[r'details'] == null) ? null : (json[r'details'] as String?);
  }

  Complaint.fromJson(Map<String, dynamic>? json) {
    fromJson(json); // allows child classes to call
  }

  Map<String, dynamic> toJson() {
    final json = <String, dynamic>{};
    if (id != null) {
      json[r'id'] = id;
    }
    if (type != null) {
      json[r'type'] = type;
    }
    if (profile != null) {
      json[r'profile'] = profile;
    }
    if (details != null) {
      json[r'details'] = details;
    }
    return json;
  }

  static List<Complaint> listFromJson(List<dynamic>? json) {
    return json == null
        ? <Complaint>[]
        : json.map((value) => Complaint.fromJson(value)).toList();
  }

  static Map<String, Complaint> mapFromJson(Map<String, dynamic>? json) {
    final map = <String, Complaint>{};
    if (json != null && json.isNotEmpty) {
      json.forEach(
          (String key, dynamic value) => map[key] = Complaint.fromJson(value));
    }
    return map;
  }

  @override
  bool operator ==(Object? __other) {
    if (identical(this, __other)) {
      return true;
    }

    if (__other is Complaint && runtimeType == __other.runtimeType) {
      return id == __other.id &&
          type == __other.type &&
          profile == __other.profile &&
          details == __other.details;
    }

    return false;
  }

  @override
  int get hashCode {
    var hashCode = runtimeType.hashCode;

    if (id != null) {
      hashCode = hashCode * 31 + id.hashCode;
    }

    if (type != null) {
      hashCode = hashCode * 31 + type.hashCode;
    }

    if (profile != null) {
      hashCode = hashCode * 31 + profile.hashCode;
    }

    if (details != null) {
      hashCode = hashCode * 31 + details.hashCode;
    }

    return hashCode;
  }

  Complaint copyWith({
    String? id,
    String? type,
    String? profile,
    String? details,
  }) {
    id ??= this.id;
    type ??= this.type;
    profile ??= this.profile;
    details ??= this.details;

    final _copy_id = id;
    final _copy_type = type;
    final _copy_profile = profile;
    final _copy_details = details;

    return Complaint(
      id: _copy_id,
      type: _copy_type,
      profile: _copy_profile,
      details: _copy_details,
    );
  }
}

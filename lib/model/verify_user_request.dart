part of komm.api;

// This file is generated by https://github.com/dart-ogurets/dart-openapi-maven - you should not modify it
// log generation bugs on Github, as part of the license, you must not remove these headers from the Mustache templates.

// VerifyUserRequest
class VerifyUserRequest {
  String? phone;

  String? prefix;

  VerifyUserRequest({
    this.phone,
    this.prefix,
  });

  @override
  String toString() {
    return 'VerifyUserRequest[phone=$phone, prefix=$prefix, ]';
  }

  fromJson(Map<String, dynamic>? json) {
    if (json == null) return;

    phone = (json[r'phone'] == null) ? null : (json[r'phone'] as String?);

    prefix = (json[r'prefix'] == null) ? null : (json[r'prefix'] as String?);
  }

  VerifyUserRequest.fromJson(Map<String, dynamic>? json) {
    fromJson(json); // allows child classes to call
  }

  Map<String, dynamic> toJson() {
    final json = <String, dynamic>{};
    if (phone != null) {
      json[r'phone'] = phone;
    }
    if (prefix != null) {
      json[r'prefix'] = prefix;
    }
    return json;
  }

  static List<VerifyUserRequest> listFromJson(List<dynamic>? json) {
    return json == null
        ? <VerifyUserRequest>[]
        : json.map((value) => VerifyUserRequest.fromJson(value)).toList();
  }

  static Map<String, VerifyUserRequest> mapFromJson(
      Map<String, dynamic>? json) {
    final map = <String, VerifyUserRequest>{};
    if (json != null && json.isNotEmpty) {
      json.forEach((String key, dynamic value) =>
          map[key] = VerifyUserRequest.fromJson(value));
    }
    return map;
  }

  @override
  bool operator ==(Object? __other) {
    if (identical(this, __other)) {
      return true;
    }

    if (__other is VerifyUserRequest && runtimeType == __other.runtimeType) {
      return phone == __other.phone && prefix == __other.prefix;
    }

    return false;
  }

  @override
  int get hashCode {
    var hashCode = runtimeType.hashCode;

    if (phone != null) {
      hashCode = hashCode * 31 + phone.hashCode;
    }

    if (prefix != null) {
      hashCode = hashCode * 31 + prefix.hashCode;
    }

    return hashCode;
  }

  VerifyUserRequest copyWith({
    String? phone,
    String? prefix,
  }) {
    phone ??= this.phone;
    prefix ??= this.prefix;

    final _copy_phone = phone;
    final _copy_prefix = prefix;

    return VerifyUserRequest(
      phone: _copy_phone,
      prefix: _copy_prefix,
    );
  }
}

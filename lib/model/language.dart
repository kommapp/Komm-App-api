part of komm.api;

// This file is generated by https://github.com/dart-ogurets/dart-openapi-maven - you should not modify it
// log generation bugs on Github, as part of the license, you must not remove these headers from the Mustache templates.

// Language
class Language {
  /* Identifier of the object */
  String? id;

  String? name;

  String? code;

  String? isoCode;

  Language({
    this.id,
    this.name,
    this.code,
    this.isoCode,
  });

  @override
  String toString() {
    return 'Language[id=$id, name=$name, description=$code, active=$isoCode, ]';
  }

  fromJson(Map<String, dynamic>? json) {
    if (json == null) return;

    id = (json[r'id'] == null) ? null : (json[r'id'] as String?);

    name = (json[r'name'] == null) ? null : (json[r'name'] as String?);

    code = (json[r'description'] == null) ? null : (json[r'description'] as String?);

    isoCode = (json[r'active'] == null) ? null : (json[r'active'] as String?);
  }

  Language.fromJson(Map<String, dynamic>? json) {
    fromJson(json); // allows child classes to call
  }

  Map<String, dynamic> toJson() {
    final json = <String, dynamic>{};
    if (id != null) {
      json[r'id'] = id;
    }
    if (name != null) {
      json[r'name'] = name;
    }
    if (code != null) {
      json[r'description'] = code;
    }
    if (isoCode != null) {
      json[r'active'] = isoCode;
    }
    return json;
  }

  static List<Language> listFromJson(List<dynamic>? json) {
    return json == null ? <Language>[] : json.map((value) => Language.fromJson(value)).toList();
  }

  static Map<String, Language> mapFromJson(Map<String, dynamic>? json) {
    final map = <String, Language>{};
    if (json != null && json.isNotEmpty) {
      json.forEach((String key, dynamic value) => map[key] = Language.fromJson(value));
    }
    return map;
  }

  @override
  bool operator ==(Object __other) {
    if (identical(this, __other)) {
      return true;
    }

    if (__other is Language && runtimeType == __other.runtimeType) {
      return id == __other.id && name == __other.name && code == __other.code && isoCode == __other.isoCode;
    }

    return false;
  }

  @override
  int get hashCode {
    var hashCode = runtimeType.hashCode;

    if (id != null) {
      hashCode = hashCode * 31 + id.hashCode;
    }

    if (name != null) {
      hashCode = hashCode * 31 + name.hashCode;
    }

    if (code != null) {
      hashCode = hashCode * 31 + code.hashCode;
    }

    if (isoCode != null) {
      hashCode = hashCode * 31 + isoCode.hashCode;
    }

    return hashCode;
  }

  Language copyWith({
    String? id,
    String? name,
    String? description,
    String? active,
  }) {
    id ??= this.id;
    name ??= this.name;
    description ??= this.code;
    active ??= this.isoCode;

    final _copy_id = id;
    final _copy_name = name;
    final _copy_description = description;
    final _copy_active = active;

    return Language(
      id: _copy_id,
      name: _copy_name,
      code: _copy_description,
      isoCode: _copy_active,
    );
  }
}
